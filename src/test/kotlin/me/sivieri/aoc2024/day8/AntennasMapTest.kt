package me.sivieri.aoc2024.day8

import org.junit.jupiter.api.Assertions.assertEquals
import org.junit.jupiter.api.Test

class AntennasMapTest {

    @Test
    fun `part 1 example`() {
        val data = """
            ............
            ........0...
            .....0......
            .......0....
            ....0.......
            ......A.....
            ............
            ............
            ........A...
            .........A..
            ............
            ............
        """.trimIndent()
        val map = AntennasMap(data)
        val result = map.countAntinodes()
        assertEquals(14, result)
    }

    @Test
    fun `two antennas`() {
        val data = """
            ..........
            ..........
            ..........
            ....a.....
            ..........
            .....a....
            ..........
            ..........
            ..........
            ..........
        """.trimIndent()
        val map = AntennasMap(data)
        val result = map.countAntinodes()
        assertEquals(2, result)
    }

    @Test
    fun `three antennas`() {
        val data = """
            ..........
            ..........
            ..........
            ....a.....
            ........a.
            .....a....
            ..........
            ..........
            ..........
            ..........
        """.trimIndent()
        val map = AntennasMap(data)
        val result = map.countAntinodes()
        assertEquals(4, result)
    }

    @Test
    fun `three antennas with overlap`() {
        val data = """
            ..........
            ..........
            ..........
            ....a.....
            ........a.
            .....a....
            ..........
            ......A...
            ..........
            ..........
        """.trimIndent()
        val map = AntennasMap(data)
        val result = map.countAntinodes()
        assertEquals(4, result)
    }

    @Test
    fun `part 2 small example`() {
        val data = """
            T.........
            ...T......
            .T........
            ..........
            ..........
            ..........
            ..........
            ..........
            ..........
            ..........
        """.trimIndent()
        val map = AntennasMap(data)
        val result = map.countAntinodesIgnoringDistance()
        assertEquals(9, result)
    }

    @Test
    fun `part 2 example`() {
        val data = """
            ............
            ........0...
            .....0......
            .......0....
            ....0.......
            ......A.....
            ............
            ............
            ........A...
            .........A..
            ............
            ............
        """.trimIndent()
        val map = AntennasMap(data)
        val result = map.countAntinodesIgnoringDistance()
        assertEquals(34, result)
    }

}